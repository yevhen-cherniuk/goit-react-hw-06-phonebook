{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookReducer.js","redux/store.js","components/Container/Container.jsx","components/Alert/Alert.jsx","components/FormAddContacts/FormAddContacts.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/FormAddContacts/FormAddContacts.module.css"],"names":["module","exports","addItem","createAction","name","number","payload","id","uuid","removeItem","filter","localstorageContacts","JSON","parse","localStorage","getItem","initialState","length","items","createReducer","phonebookActions","state","item","combineReducers","store","configureStore","reducer","contacts","phonebookReducer","Container","children","className","style","container","Alert","message","FormAddContacts","isAdded","handleChangeName","setState","handleChangeNumber","handleClearForm","handlesubmit","e","preventDefault","props","setTimeout","find","el","addContact","this","form","onSubmit","span","input","type","placeholder","value","onChange","target","pattern","title","required","nameInputId","numberInputId","button","CSSTransition","in","timeout","classNames","unmountOnExit","Component","mapDispatchToprops","connect","handleDelete","btnList","onClick","console","log","visibleContacts","query","toLowerCase","includes","getFilteredContact","TransitionGroup","component","map","label","App","prevProps","PrevState","localContacts","stringify","setItem","appear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1dbd4351.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2MnlU\",\"span\":\"ContactItem_span__2Ax6A\",\"btnList\":\"ContactItem_btnList__JXZ7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Y63w\",\"span\":\"Filter_span__3R-5i\",\"input\":\"Filter_input__1a771\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2m4S7\",\"title\":\"Container_title__VPx9v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2yEVU\",\"item-enter\":\"ContactList_item-enter__2RO-T\",\"item-enter-active\":\"ContactList_item-enter-active__NPNbz\",\"item-exit\":\"ContactList_item-exit__YQADI\",\"item-exit-active\":\"ContactList_item-exit-active__YaVYP\",\"contact-list\":\"ContactList_contact-list__eSUMt\"};","// import { ADD, REMOVE, FILTER } from \"./phonebookTypes\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst addItem = createAction(\"phonebook/add\", (name, number) => ({ payload: { id: uuid(), name, number } }));\r\n\r\n// const addItem = (name, number) => {\r\n//   return {\r\n//     type: ADD,\r\n//     payload: {\r\n//       id: uuid(),\r\n//       name: name,\r\n//       number: number,\r\n//     },\r\n//   };\r\n// };\r\n\r\nconst removeItem = createAction(\"phonebook/remove\");\r\n\r\n// const removeItem = (id) => {\r\n//   return {\r\n//     type: REMOVE,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\nconst filter = createAction(\"phonebook/filter\");\r\n\r\n// const filter = (str) => {\r\n//   return {\r\n//     type: FILTER,\r\n//     payload: str,\r\n//   };\r\n// };\r\n\r\nexport default { addItem, removeItem, filter };","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import { ADD, REMOVE, FILTER } from \"./phonebookTypes\";\r\nimport phonebookActions from \"./phonebookActions\";\r\n\r\nconst contactsBase = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst localstorageContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\nconst initialState = (localstorageContacts && localstorageContacts.length) ? localstorageContacts : contactsBase;\r\n\r\n\r\nconst addContact = (state, { payload }) => [...state, payload];\r\nconst removeContact = (state, { payload }) => state.filter((item) => item.id !== payload);\r\nconst onFilter = (state, { payload }) => payload;\r\n\r\nconst items = createReducer(initialState, {\r\n  [phonebookActions.addItem]: addContact,\r\n  [phonebookActions.removeItem]: removeContact,\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [phonebookActions.filter]: onFilter,\r\n});\r\n\r\n// const itemReducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case phonebookActions.addItem.type:\r\n//       return [...state, payload];\r\n\r\n//     case phonebookActions.removeItem.type:\r\n//       // const idx = state.indexOf(payload);\r\n//       return state.filter((item) => item.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case phonebookActions.filter.type:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({ items, filter });","// import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport phonebookReducer from \"./phonebook/phonebookReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: phonebookReducer,\r\n// });\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport style from './Container.module.css';\r\n\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.container}>{children}</div>\r\n);\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = ({ message }) => <div className=\"AlertWrapper\">{message}</div>;\r\n\r\nexport default Alert;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from \"../../redux/phonebook/phonebookActions\";\r\nimport style from \"./FormAddContacts.module.css\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nclass FormAddContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isAdded: false,\r\n    message: \"\",\r\n  };\r\n\r\n  handleChangeName = (name) => {\r\n    this.setState({ name });\r\n  };\r\n\r\n  handleChangeNumber = (number) => {\r\n    this.setState({ number });\r\n  };\r\n\r\n  handleClearForm = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  handlesubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    if (!name || !number) {\r\n      this.setState({ isAdded: true, message: \"Fill in all the fields\" });\r\n      setTimeout(() => {\r\n        this.setState({ isAdded: false });\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    if (contacts.find((el) => el.name === name)) {\r\n      this.setState({ isAdded: true, message: \"Contact already exist\" });\r\n      setTimeout(() => {\r\n        this.setState({ isAdded: false });\r\n      }, 2000);\r\n    } else {\r\n      this.props.addContact(name, number);\r\n      this.setState({ isAdded: true, message: \"Contact added successfully\" });\r\n      setTimeout(() => {\r\n        this.setState({ isAdded: false });\r\n      }, 2000);\r\n    }\r\n    this.handleClearForm();\r\n  };\r\n  \r\n   render() {\r\n    const { name, number, isAdded, message } = this.state;\r\n    return (\r\n      <>\r\n        <form className={style.form} onSubmit={this.handlesubmit}>\r\n          <label className=\"lable\">\r\n            <span className={style.span}>Name</span>\r\n            <input\r\n              className={style.input}\r\n              type=\"text\"\r\n              placeholder=\"Name Surname\"\r\n              value={name}\r\n              onChange={(e) => this.handleChangeName(e.target.value)}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n          <label className=\"lable\">\r\n            <span className={style.span}>Number</span>\r\n            <input\r\n              className={style.input}\r\n              type=\"tel\"\r\n              placeholder=\"Phone\"\r\n              value={number}\r\n              onChange={(e) => this.handleChangeNumber(e.target.value)}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n          <button className={style.button} type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n        <CSSTransition in={isAdded} timeout={500} classNames=\"fade-alert\" unmountOnExit>\r\n          <Alert message={message} />\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: contacts.items,\r\n});\r\n\r\nconst mapDispatchToprops = {\r\n  addContact: phonebookActions.addItem,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(FormAddContacts);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport phonebookActions from \"../../redux/phonebook/phonebookActions\";\r\nimport style from \"./ContactItem.module.css\";\r\n\r\nconst ContactItem = ({ el, handleDelete }) => {\r\n  const { name, number, id } = el;\r\n  const handleClick = () => {\r\n    handleDelete(id);\r\n  };\r\n\r\n  return (\r\n    <li className={style.item} key={id}>\r\n      <span className={style.span}></span>\r\n      {name}: {number}\r\n      <button\r\n        type=\"button\"\r\n        className={style.btnList}\r\n        onClick={handleClick}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  el: PropTypes.object.isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToprops = {\r\n  handleDelete: phonebookActions.removeItem,\r\n};\r\n\r\nexport default connect(null, mapDispatchToprops)(ContactItem);","import React from \"react\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, filter }) => {\r\n  console.log(contacts);\r\n  const getFilteredContact = (items, query) => {\r\n    return items.filter((item) => item.name.toLowerCase().includes(query.toLowerCase()));\r\n  };\r\n  const visibleContacts = getFilteredContact(contacts, filter);\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n      {visibleContacts.map((el) => {\r\n        return (\r\n          <CSSTransition key={el.id} timeout={500} classNames=\"item\">\r\n            <ContactItem el={el} />\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: contacts.items,\r\n  filter: contacts.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from \"../../redux/phonebook/phonebookActions\";\r\nimport PropTypes from 'prop-types';\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  const handleChange = (e) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <label className={style.label}>\r\n      <span className={style.span}>Find contacts</span>\r\n      <input\r\n        className={style.input}\r\n        type=\"text\"\r\n        placeholder=\"name\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  filter: contacts.filter,\r\n});\r\n\r\nconst mapDispatchToprops = {\r\n  onChange: phonebookActions.filter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Filter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport \"./App.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\n// Components\nimport Container from './components/Container/Container';\nimport FormAddContacts from \"./components/FormAddContacts/FormAddContacts\";\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  componentDidUpdate(prevProps, PrevState) {\n    if (prevProps.contacts !== this.props.contacts) {\n      const localContacts = JSON.stringify(this.props.contacts);\n      localStorage.setItem(\"contacts\", localContacts);\n    }\n  }\n\n  render() {\n    const { contacts } = this.props;\n\n\n    return (\n      <Container title=\"Phonebook\">\n        <CSSTransition in={true} appear={true} timeout={500} classNames=\"fade-logo\" unmountOnExit>\n          <h1 className=\"title\">Phonebook</h1> \n        </CSSTransition>        \n        <FormAddContacts />\n        <h2 className=\"title\">Contacts</h2>\n          <CSSTransition in={contacts.length > 1} timeout={500} classNames=\"fade-filter\" unmountOnExit>\n            <Filter />\n          </CSSTransition>\n        <ContactList />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormAddContacts_form__3_PCj\",\"input\":\"FormAddContacts_input__1ZXw5\",\"span\":\"FormAddContacts_span__2b5ds\",\"button\":\"FormAddContacts_button__13zzY\"};"],"sourceRoot":""}